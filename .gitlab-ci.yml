# Only run pipelines for:
#  - merge requests (to any target branch)
#  - tags
#  - pushes to master or questa branches
# Do not run pipelines for forks
workflow:
  rules:
    - if: $CI_PROJECT_NAMESPACE != "tensors" && $CI_PROJECT_NAMESPACE != "etphipp"
      when: never
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "questa"

variables:
  GIT_STRATEGY: clone

stages:
  - build

build-clang:
  stage: build
  tags:
    - clang
  script:
    - cd ..
    - rm -rf build_clang
    - mkdir build_clang
    - cd build_clang
    - source ../genten/scripts/sems_clang/setup_env.sh
    - ../genten/scripts/sems_clang/do_configure.sh
    - make -j32
    - ctest
  rules:
    - if: $CI_SERVER_HOST == "cee-gitlab.sandia.gov"

build-gcc:
  stage: build
  tags:
    - gcc
  script:
    - cd ..
    - rm -rf build_gcc
    - mkdir build_gcc
    - cd build_gcc
    - source ../genten/scripts/sems_gcc/setup_env.sh
    - ../genten/scripts/sems_gcc/do_configure.sh
    - make -j32
    - ctest
  rules:
    - if: $CI_SERVER_HOST == "cee-gitlab.sandia.gov"

build-intel:
  stage: build
  tags:
    - intel
  script:
    - cd ..
    - rm -rf build_intel
    - mkdir build_intel
    - cd build_intel
    - source ../genten/scripts/sems_intel/setup_env.sh
    - ../genten/scripts/sems_intel/do_configure.sh
    - make -j32
    - ctest
  rules:
    - if: $CI_SERVER_HOST == "cee-gitlab.sandia.gov"

build-cuda-kepler:
  stage: build
  tags:
    - cuda_kepler
  script:
    - cd ..
    - rm -rf build_cuda_kepler
    - mkdir build_cuda_kepler
    - cd build_cuda_kepler
    - source ../genten/scripts/elbert_cuda_kepler/setup_env.sh
    - ../genten/scripts/elbert_cuda_kepler/do_configure.sh
    - make -j32
    - ctest
  rules:
    - if: $CI_SERVER_HOST == "cee-gitlab.sandia.gov"

.build-gitlab-gcc:
  stage: build
  image: registry.gitlab.com/tensors/genten/build_gnu_clang:latest
  script:
    - cd ..
    - rm -rf build_gitlab_gcc
    - mkdir build_gitlab_gcc
    - cd build_gitlab_gcc
    - ../genten/scripts/gitlab_gcc/do_configure.sh
    - make -j4
    - ctest
  rules:
    - if: $CI_SERVER_HOST == "gitlab.com"
      when: manual

.build-gitlab-clang:
  stage: build
  image: registry.gitlab.com/tensors/genten/build_gnu_clang:latest
  script:
    - cd ..
    - rm -rf build_gitlab_clang
    - mkdir build_gitlab_clang
    - cd build_gitlab_clang
    - ../genten/scripts/gitlab_clang/do_configure.sh
    - make -j4
    - ctest
  rules:
    - if: $CI_SERVER_HOST == "gitlab.com"
      when: manual

build-gitlab-clang-image:
  stage: build
  image: docker:stable
  services:
    - docker:stable-dind
  script:
    - docker build -t genten:latest --build-arg ARCH=BDW -f docker/Dockerfile_clang_openmp_image .
    - docker run --name gt --rm -i -w /build/genten -t genten:latest ctest
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker tag genten:latest $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker rmi $CI_REGISTRY_IMAGE:latest
  rules:
    - if: $CI_SERVER_HOST == "gitlab.com"
      when: manual